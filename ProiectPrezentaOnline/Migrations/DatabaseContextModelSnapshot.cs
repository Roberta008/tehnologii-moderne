// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectPrezentaOnline.Data;

#nullable disable

namespace ProiectPrezentaOnline.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProiectPrezentaOnline.Models.Curs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cursuri");
                });

            modelBuilder.Entity("ProiectPrezentaOnline.Models.Laborator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Laboratoare");
                });

            modelBuilder.Entity("ProiectPrezentaOnline.Models.PrezentaCurs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDCurs")
                        .HasColumnType("int");

                    b.Property<int?>("IDStudent")
                        .HasColumnType("int");

                    b.Property<bool>("Prezent")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("IDCurs");

                    b.HasIndex("IDStudent");

                    b.ToTable("PrezenteCursuri");
                });

            modelBuilder.Entity("ProiectPrezentaOnline.Models.PrezentaLaborator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDLaborator")
                        .HasColumnType("int");

                    b.Property<int?>("IDStudent")
                        .HasColumnType("int");

                    b.Property<bool>("Prezent")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("IDLaborator");

                    b.HasIndex("IDStudent");

                    b.ToTable("PrezenteLaboratoare");
                });

            modelBuilder.Entity("ProiectPrezentaOnline.Models.Utilizator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumarDeTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeUtilizator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizatori");
                });

            modelBuilder.Entity("ProiectPrezentaOnline.Models.PrezentaCurs", b =>
                {
                    b.HasOne("ProiectPrezentaOnline.Models.Curs", "Curs")
                        .WithMany()
                        .HasForeignKey("IDCurs");

                    b.HasOne("ProiectPrezentaOnline.Models.Utilizator", "Student")
                        .WithMany()
                        .HasForeignKey("IDStudent");

                    b.Navigation("Curs");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProiectPrezentaOnline.Models.PrezentaLaborator", b =>
                {
                    b.HasOne("ProiectPrezentaOnline.Models.Laborator", "Laborator")
                        .WithMany()
                        .HasForeignKey("IDLaborator");

                    b.HasOne("ProiectPrezentaOnline.Models.Utilizator", "Student")
                        .WithMany()
                        .HasForeignKey("IDStudent");

                    b.Navigation("Laborator");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
